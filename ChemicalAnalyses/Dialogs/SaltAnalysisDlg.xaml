<Window x:Class="ChemicalAnalyses.Dialogs.SaltAnalysisDlg"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:alumni="clr-namespace:ChemicalAnalyses.Alumni"
        xmlns:commands="clr-namespace:ChemicalAnalyses.Commands"
        mc:Ignorable="d"
        Title="{Binding}" Height="500" Width="1200" MinHeight="500" MinWidth="1050" 
            x:Name="wSAWindow"  Validation.Error="OnErrorEvent">
    <Window.CommandBindings>
        <CommandBinding Command="Save" CanExecute="SaveCommand_CanExecute" Executed="SaveCommand_Executed"/>
        <CommandBinding Command="Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed"/>
        <CommandBinding Command="commands:CustomCommands.Calculate" CanExecute="CalculateCommand_CanExecute" Executed="CalculateCommand_Executed"/>
        <CommandBinding Command="Print" Executed="PrintCommand_Executed" CanExecute="PrintCommand_CanExecute"/>
        <CommandBinding Command="SelectAll" CanExecute="SelectAllCommand_CanExecute" Executed="SelectAllCommand_Executed"/>
    </Window.CommandBindings>
    <Window.Resources>
        <alumni:SchemeToSchemeDescriptionConverter x:Key="sch2descConv"/>
        <alumni:SchemeToSchemeDescriptionKVPairConverter x:Key="sch2descKVPairConv"/>
        <alumni:BooleanToVisibilityConverter x:Key="bln2VisibilityConv"/>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        </Style>
    </Window.Resources>
    <Grid x:Name="grdMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Width" Value="90"/>
                <Setter Property="Height" Value="25"/>
            </Style>
        </Grid.Resources>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="0" x:Name="scroller"
                      VerticalScrollBarVisibility="Auto" CanContentScroll="True">
            <DataGrid x:Name="dgrdSA" CanUserAddRows="False" TargetUpdated="dgrdSA_SourceUpdated"
                  ItemsSource="{Binding Path=saltAnalysisDatas, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True,
                NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                      AutoGenerateColumns="False" LoadingRow="dgrdSA_LoadingRow">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="270" />
                            </Setter.Value>
                        </Setter>
                        <Setter Property="MinHeight" Value="20"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowValidationErrorTemplate>
                    <ControlTemplate>
                        <Grid Margin="0,-2,0,-2" 
                              ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type DataGridRow}}, 
                            Path=(Validation.Errors)[0].ErrorContent}">
                            <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" 
                                     Height="{TemplateBinding FontSize}"/>
                        </Grid>
                    </ControlTemplate>
                </DataGrid.RowValidationErrorTemplate>
                <DataGrid.RowValidationRules>
                    <alumni:SaltAnalysisValidationRule ValidatesOnTargetUpdated="True"
                                                       ValidationStep="RawProposedValue"/>
                </DataGrid.RowValidationRules>
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding Path=AnalysisDescription, 
                                        UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, 
                                        TargetNullValue=Описание отсутствует}"/>
                                    <TextBlock Text="Для изменения дважды кликните мышью"/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Лабораторный&#10;номер" Binding="{Binding 
                        Path=LabNumber}" IsReadOnly="True"/>
                    <DataGridTemplateColumn Header="Дата&#10;анализа">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                <DatePicker Text="{Binding AnalysisDate, UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True,
                                    NotifyOnTargetUpdated=True}" SelectedDateFormat="Short" Language="ru-RU"
                                    ToolTip="Ввести дату анализа" SelectedDateChanged="DatePicker_SelectedDateChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Масса сырой&#10;навески, г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=WetWeight, UpdateSourceTrigger=PropertyChanged,
                        Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True,
                        NotifyOnTargetUpdated=True, StringFormat={}{0:0.0000},   
                                        NotifyOnSourceUpdated=True}" TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Mg (титр),&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=MagnesiumTitre, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.00}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}" 
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="(аликвота)&#10;Mg, мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=MagnesiumAliquote, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Ca (титр),&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=CalciumTitre, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.00}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="(аликвота)&#10;Ca, мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=CalciumAliquote, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="K,&#10;показание">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=KaliumValue, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="K объём,&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=KaliumVolume, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="K, диапазон">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                <TextBox Text="{Binding Path=KaliumDiapason, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="K, калибровка">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="{Binding Path=KaliumCalibration,
                        UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0}, NotifyOnTargetUpdated=True}" 
                        ToolTip="Нажмите, чтобы изменить/создать новую" 
                        Click="CalibrationButton_Click" Width="25"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Г.Влажность,&#10;пустой бюкс,&#10;г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=HumidityCrucibleEmptyWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Г.Влажность,&#10;сырая навеска,&#10;г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=HumidityCrucibleWetSampleWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Г.Влажность,&#10;сухая навеска,&#10;110°, г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=HumidityCrucibleDry110SampleWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Г.Влажность,&#10;сухая навеска,&#10;180°, г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=HumidityCrucibleDry180SampleWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Cl титр,&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=ChlorumTitre, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.00}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Cl (аликвота),&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=ChlorumAliquote, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Br титр,&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=BromumTitre, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Br (аликвота),&#10;мл">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=BromumAliquote, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Н.О,&#10;бюкс, г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=ResiduumCrucibleEmptyWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Н.О,&#10;бюкс c&#10;навеской, г">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=ResiduumCrucibleFullWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <TextBlock>
                                <Run>SO₄²¯</Run>
                                <LineBreak/>
                                <Run>вес тигля, г</Run>
                            </TextBlock>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=SulfatesCrucibleEmptyWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <TextBlock>
                                <Run>SO₄²¯, тигель с</Run>
                                <LineBreak/>
                                <Run>осадком, г</Run>
                            </TextBlock>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=SulfatesCrucibleFullWeight, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0000}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.Header>
                            <TextBlock >
                                <Run>SO₄²¯</Run><LineBreak/><Run>аликвота, мл</Run>
                            </TextBlock>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <AdornerDecorator>
                                    <TextBox Text="{Binding Path=SulfatesAliquote, 
                        NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay,
                        StringFormat={}{0:0.0}, ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                             TextChanged="TextBox_TextChanged"/>
                                </AdornerDecorator>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <AdornerDecorator> <!--Wrap in adoernerdecorator to preserve validation errors-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                                <Label Content="Коэффициент Hg:"/>
                                <TextBox Text="{Binding Path=HgCoefficient, StringFormat={}{0:0.0000}, 
                                    ValidatesOnExceptions=True, NotifyOnValidationError=True, 
                                    UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content="мг-экв/мл; Холостой Br:"/>
                                <TextBox Text="{Binding Path=BromumBlank, StringFormat={}{0:0.0}, 
                                    ValidatesOnExceptions=True, NotifyOnTargetUpdated=True,
                                    NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content="мл; Стандартный титр Br:"/>
                                <TextBox Text="{Binding Path=BromumStandardTitre, StringFormat={}{0:0.0000},
                                    NotifyOnValidationError=True, ValidatesOnExceptions=True, 
                                    UpdateSourceTrigger=PropertyChanged , NotifyOnTargetUpdated=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content=" мг-экв/мл"/>
                                <Label Content=" Рекомендуемая схема расчета: "/>
                                <TextBlock Text="{Binding Path=RecommendedCalculationScheme, 
                                    UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True,
                                    Converter={StaticResource sch2descConv}}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                                <Label Content="Холостой сульфаты:"/>
                                <TextBox Text="{Binding Path=SulfatesBlank, StringFormat={}{0:0.0000}, 
                                    ValidatesOnNotifyDataErrors=True, UpdateSourceTrigger=PropertyChanged, 
                                    ValidatesOnExceptions=True, NotifyOnTargetUpdated=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content="мг; Трилон Б (Ca):"/>
                                <TextBox Text="{Binding Path=CalciumTrilonTitre, StringFormat={}{0:0.0000}, 
                                    ValidatesOnExceptions=True, NotifyOnTargetUpdated=True,
                                    UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content=" мг-экв/мл; Трилон Б (Mg):"/>
                                <TextBox Text="{Binding Path=MagnesiumTrilonTitre, StringFormat={}{0:0.0000}, 
                                    ValidatesOnExceptions=True, NotifyOnTargetUpdated=True,
                                    UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}"
                                         TextChanged="TextBox_TextChanged"/>
                                <Label Content=" мг-экв/мл; Предполагаемая схема расчета:"/>
                                <ComboBox SelectedItem="{Binding Path=DefaultCalculationScheme, 
                                    ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged,
                                    NotifyOnValidationError=True, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True,
                                    Converter={StaticResource sch2descKVPairConv}}"
                                         ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                    AncestorType=Window}, Path=SchemesNames, Mode=TwoWay}"
                                          DisplayMemberPath="Value" SelectedValuePath="Key"
                                          SelectionChanged="ComboBox_SelectionChanged"
                                          ToolTip="Выберите требуемую схему расчета, принимая во внимание предполагаемую.&#x0a;Данные буду обсчитаны с использованием выбранной вами схемы!"/>
                                <Label Content="_Рассчитано:" Target="{Binding ElementName=cbIsCalculated}"/>
                                <CheckBox IsChecked="{Binding Path=IsCalculated, NotifyOnSourceUpdated=True}" 
                                          x:Name="cbIsCalculated" IsEnabled="False"/>
                            </StackPanel>
                            <StackPanel Visibility="{Binding Path=IsCalculated, Converter={StaticResource bln2VisibilityConv}}"
                                            x:Name="spIonForm" Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
                                <StackPanel.ToolTip>
                                    <ToolTip>
                                        <ToolTip.Content>
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="1">
                                                    <Ellipse Width="16" Height="16" Fill="Green"/>
                                                    <TextBlock Text="— Сумма находится в пределах нормы"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Ellipse Width="16" Height="16" Fill="Blue"/>
                                                    <TextBlock Text="— Значение суммы ниже допустимого предела"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <Ellipse Width="16" Height="16" Fill="Red"/>
                                                    <TextBlock Text="— Значение суммы выше допустимого предела"/>
                                                </StackPanel>
                                            </StackPanel>
                                        </ToolTip.Content>
                                    </ToolTip>
                                </StackPanel.ToolTip>
                                <Label Content="Ионная форма:" x:Name="lblIonicForm"/>
                                <Ellipse Width="16" Height="16" Fill="{Binding Path=IonSumColor, NotifyOnSourceUpdated=True}"/>
                            </StackPanel>
                            <StackPanel Visibility="{Binding Path=IsCalculated, Converter={StaticResource bln2VisibilityConv}}"
                                            x:Name="spSaltForm" Orientation="Horizontal" ToolTip="{Binding ElementName=spIonForm, Path=ToolTip}"
                                        Grid.Column="1" Grid.Row="0">
                                <Label Content="Солевая форма:" x:Name="lblSaltForm"/>
                                <Ellipse Width="16" Height="16" Fill="{Binding Path=SaltSumColor, NotifyOnSourceUpdated=True}"/>
                            </StackPanel>
                        </Grid>
                        </AdornerDecorator>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Resources>
                            <RoutedUICommand x:Key="cmdCompare" Text="Сравнить">
                                <RoutedUICommand.InputGestures>
                                    <KeyGesture>ALT+C</KeyGesture>
                                </RoutedUICommand.InputGestures>
                            </RoutedUICommand>
                            <RoutedUICommand x:Key="cdmDuplicate" Text="Дублировать">
                                <RoutedUICommand.InputGestures>
                                    <KeyGesture>ALT+D</KeyGesture>
                                </RoutedUICommand.InputGestures>
                            </RoutedUICommand>
                        </ContextMenu.Resources>
                        <MenuItem Header="Рассчитать результаты" Command="commands:CustomCommands.Calculate" 
                                  ToolTip="Производит расчет по схеме, выбранной из выпадающего списка"
                                  x:Name="miCalculateResults"/>
                        <MenuItem Header="Удалить выбранные" Command="Delete" x:Name="miDeleteAnalyses"/>
                        <MenuItem Command="{StaticResource cmdCompare}" x:Name="imCompareResults">
                            <MenuItem.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="Сравнить результаты расчета двух образцов." FontWeight="Black"/>
                                    <TextBlock Text="Сравнение возможно только если:"/>
                                    <TextBlock Text="1) выбрано 2 образа;"/>
                                    <TextBlock Text="2) у выбранных образцов совпадают схемы расчета;"/>
                                    <TextBlock Text="3) для выбранных образцов произведен расчет."/>
                                </StackPanel>
                            </MenuItem.ToolTip>
                        </MenuItem>
                        <MenuItem Command="{StaticResource cdmDuplicate}"/>
                        <ContextMenu.CommandBindings>
                            <CommandBinding Command="Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed"/>
                            <CommandBinding Command="{StaticResource cmdCompare}" CanExecute="CompareCommand_CanExecute" 
                                            Executed="CompareCommand_Executed"/>
                            <CommandBinding Command="{StaticResource cmdCompare}" CanExecute="CompareCommand_CanExecute" 
                                            Executed="CompareCommand_Executed"/>
                            <CommandBinding Command="{StaticResource cdmDuplicate}" CanExecute="DuplicateCommand_CanExecute"
                                            Executed="DuplicateCommand_Executed"/>
                        </ContextMenu.CommandBindings>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </ScrollViewer>
        <Button x:Name="btnOK" Content="OK" Grid.Column="0" Grid.Row="1" Command="Save" IsDefault="False"/>
        <Button Content="Отмена" Grid.Column="1" Grid.Row="1" IsDefault="True" IsCancel="True"/>
        <Button x:Name="btnDelete" Grid.Row="1" Grid.Column="2" Command="Delete" Content="Удалить" Visibility="{Binding}"/>
        <Button x:Name="btnPrint" Grid.Row="1" Grid.Column="3" Command="Print" Content="Печать" Visibility="{Binding}"/>
    </Grid>
</Window>